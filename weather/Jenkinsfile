// node('dev') {
//     // Define environment variable
//     def imageName = 'edmundtetteh/movies-parser'
//     def registry = 'https://registry.slowcoder.com'

//     // Stage: Checkout
//     stage('Checkout') {
//         // Git checkout
//         checkout([$class: 'GitSCM', branches: [[name: 'develop']],
//                   userRemoteConfigs: [[url: 'git@github.com:edmundtetteh/weather-app-project.git']],
//                   credentialsId: 'ssh-togithub'])
//     }
// }

pipeline {
    agent {
        label "dev"
    }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('github-ssh')
    }

    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
        disableConcurrentBuilds()
        timeout(time: 60, unit: 'MINUTES')
        timestamps()
    }

    stages {
        stage('Build auth') {
            steps {
                sh '''
                cd $WORKSPACE/weatherapp-project/weather-app-project/auth
                docker build -t edmundtetteh/weatherapp-auth:${BUILD_NUMBER} .
                   '''
                
            }
        }
        

        // stage('Test auth') {
	    //  agent {
        //     docker {
        //       image 'golang:alpine'
        //       args '-u root:root'
        //     }
        // }

        stage('Test') {
            steps {
                // Add your test steps here
                echo 'Testing...'
            }
        }

        stage('Deploy') {
            steps {
                // Add your deployment steps 
                echo 'Deploying...'
            }
        }
    }
}








