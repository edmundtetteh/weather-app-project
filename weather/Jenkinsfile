// node('dev') {
//     // Define environment variable
//     def imageName = 'edmundtetteh/movies-parser'
//     def registry = 'https://registry.slowcoder.com'

//     // Stage: Checkout
//     stage('Checkout') {
//         // Git checkout
//         checkout([$class: 'GitSCM', branches: [[name: 'develop']],
//                   userRemoteConfigs: [[url: 'git@github.com:edmundtetteh/weather-app-project.git']],
//                   credentialsId: 'ssh-togithub'])
//     }
// }

pipeline {
    agent {
        label "dev"
    }
      environment {
		DOCKERHUB_CREDENTIALS=credentials('dockerhubnew')
	}
    

    // environment {
    //     DOCKERHUB_CREDENTIALS = credentials('github-ssh')
    // }

    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
        disableConcurrentBuilds()
        timeout(time: 60, unit: 'MINUTES')
        timestamps()
    }




    stages {
        stage('Login') {

        steps {
            sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }
        stage('Build auth') {
            steps {
                sh '''
                cd /home/ubuntu/workspace/edmund-work-space/WEATHERAPP/WEATHERAPP/auth
                docker build -t edmundtetteh/weatherapp-auth:${BUILD_NUMBER} .
                   '''
                
            }
        }



            stage('Push auth') {
                when{ 
                expression {
                    env.GIT_BRANCH == 'origin/develop'  }
                    }
                    steps {
                        sh '''
                    docker push edmundtetteh/weatherapp-auth:${BUILD_NUMBER}
                        '''
                    }
           }
        
        stage('Build UI') {
            steps {
                sh '''
            cd /home/ubuntu/workspace/edmund-work-space/WEATHERAPP/WEATHERAPP/UI
            docker build -t edmundtetteh/weatherapp-ui:${BUILD_NUMBER} .
                '''
            }
        }
        stage('Push UI ') {
         when{ 
          expression {
            env.GIT_BRANCH == 'origin/develop' }
            }
            steps {
                sh '''
             docker push edmundtetteh/weatherapp-ui:${BUILD_NUMBER}
                '''
            }
        }
        stage('Build Weather') {
            steps {
                sh '''
            cd /home/ubuntu/workspace/edmund-work-space/WEATHERAPP/WEATHERAPP/weather
            docker build -t edmundtetteh/weatherapp-weather:${BUILD_NUMBER} .
                '''
            }
        }
        stage('Push weather') {
         when{ 
          expression {
            env.GIT_BRANCH == 'origin/develop' }
            }
            steps {
                sh '''
             docker push edmundtetteh/weatherapp-weather:${BUILD_NUMBER}
                '''
            }
        } 



        stage('Test') {
            steps {
                // Add your test steps
                echo 'Testing...'
            }
        }

        stage('Deploy') {
            steps {
                // Add your deployment steps 
                echo 'Deploying...'
            }
        }
    }
}








